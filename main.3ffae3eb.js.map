{"version":3,"sources":["scripts/main.js"],"names":["sortBySalary","employees","sort","current","next","salary","replace","getEmployeeObjects","map","employee","name","innerText","position","dataset","age","list","document","querySelector","people","querySelectorAll","employeeObjects","sortedBySalary","innerHTML","join"],"mappings":";AAAA,aAsBA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApBA,SAASA,EAAaC,GACbA,OAAAA,EAAUC,KAAK,SAACC,EAASC,GAC9BA,OAAAA,EAAKC,OAAOC,QAAQ,QAAS,IAAMH,EAAQE,OAAOC,QAAQ,QAAS,MAIvE,SAASC,EAAmBN,GACnB,OAAA,EAAIA,GAAWO,IAAI,SAAAC,GAAa,MAAA,CACrCC,KAAMD,EAASE,UACfC,SAAUH,EAASI,QAAQD,SAC3BP,OAAQI,EAASI,QAAQR,OACzBS,IAAKL,EAASI,QAAQC,OAI1B,IAAMC,EAAOC,SAASC,cAAc,MAC9BC,EAASF,SAASG,iBAAiB,MACnCC,EAAkBb,EAAmBW,GACrCG,EAAiBrB,EAAaoB,GAEpCL,EAAKO,UAAYD,EAAeb,IAAI,SAAAC,GAEhBA,MAAAA,8BAAAA,OAAAA,EAASG,SACXH,sBAAAA,OAAAA,EAASJ,OACZI,mBAAAA,OAAAA,EAASK,IAElBL,eAAAA,OAAAA,EAASC,KAN6B,iBAQzCa,KAAK","file":"main.3ffae3eb.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nfunction sortBySalary(employees) {\n  return employees.sort((current, next) => (\n    next.salary.replace(/[$,]/g, '') - current.salary.replace(/[$,]/g, '')\n  ));\n}\n\nfunction getEmployeeObjects(employees) {\n  return [...employees].map(employee => ({\n    name: employee.innerText,\n    position: employee.dataset.position,\n    salary: employee.dataset.salary,\n    age: employee.dataset.age,\n  }));\n}\n\nconst list = document.querySelector('ul');\nconst people = document.querySelectorAll('li');\nconst employeeObjects = getEmployeeObjects(people);\nconst sortedBySalary = sortBySalary(employeeObjects);\n\nlist.innerHTML = sortedBySalary.map(employee => `\n  <li\n    data-position=${employee.position}\n    data-salary=${employee.salary}\n    data-age=${employee.age}\n  >\n    ${employee.name}\n  </li>\n`).join('');\n"]}